{"version":3,"file":"static/js/634.f01d1b59.chunk.js","mappings":"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","sources":["contexts/api/index.jsx","pages/dashboard/IncomeAreaChart.jsx","pages/dashboard/PoolPerformance.jsx","pages/dashboard/index.jsx"],"sourcesContent":["export const fetchPoolPerformanceData = async (selectedPool) => {\n  if (!selectedPool) {\n    console.error(\"‚ùå No pool selected\");\n    return { points: [], series: [] };\n  }\n\n  const POOLS = {\n    \"1\": {\n      name: \"WETH-USD-1w\",\n      address: \"0x31f7da25361ad99ca4daa4e8709624660f324f48\",\n      start: 1631541600,\n      end: 1688998703\n    },\n    \"2\": {\n      name: \"WBTC-USD-1w\",\n      address: \"0x13d5387389ac1a3b72391d88b03b893a945b17cd\",\n      start: 1631541600,\n      end: 1717353143\n    },\n    \"3\": {\n      name: \"WBTC-ETH-1w\",\n      address: \"0xb0105f829d50841b949c274636c2d173a78db7e0\",\n      start: 1631541600,\n      end: 1669025951\n    }\n  };\n\n  const selectedAddress = POOLS[selectedPool]?.address;\n  const startPool = POOLS[selectedPool]?.start;\n  const endPool = POOLS[selectedPool]?.end;\n  if (!selectedAddress) {\n    console.error(\"‚ùå Invalid pool ID:\", selectedPool);\n    return { points: [], series: [] };\n  }\n\n  const API_URL = `https://radiant-fjord-87733-0278092327b3.herokuapp.com/api/smartalpha/pools/${selectedAddress}/pool-performance-chart/${startPool}/${endPool}`;\n    try {\n      //console.log(\"üì° Fetching pool performance data from:\", API_URL);\n  \n      const response = await fetch(API_URL);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const responseData = await response.json();\n      //console.log(\"‚úÖ Raw API Response for pool performance:\", responseData);\n  \n      // Ensure `data` exists and is an array\n      if (!responseData || !responseData.data || !Array.isArray(responseData.data)) {\n        console.error(\"‚ùå Unexpected API response format\", responseData);\n        return { points: [], series: [] };\n      }\n  \n      // Extract time points and numerical series\n      const points = responseData.data.map((entry) => entry.point);\n      const series = [\n        {\n          name: \"Junior without SA\",\n          data: responseData.data.map((entry) => parseFloat(entry.juniorWithoutSA) || 0),\n        },\n        {\n          name: \"Junior with SA\",\n          data: responseData.data.map((entry) => parseFloat(entry.juniorWithSA) || 0),\n        },\n        {\n          name: \"Senior without SA\",\n          data: responseData.data.map((entry) => parseFloat(entry.seniorWithoutSA) || 0),\n        },\n        {\n          name: \"Senior with SA\",\n          data: responseData.data.map((entry) => parseFloat(entry.seniorWithSA) || 0),\n        },\n        {\n          name: \"Token Price\",\n          data: responseData.data.map((entry) => parseFloat(entry.underlyingPrice) || 0),\n        },\n      ];\n  \n      const parsedData = { points, series };\n      //console.log(\"‚úÖ Parsed API Data:\", parsedData);\n      return parsedData;\n    } catch (error) {\n      console.error(\"‚ùå API Fetch Error:\", error);\n      return { points: [], series: [] };\n    }\n  };\n  \n  export const fetchUserPortfolioValue = async (userAddress) => {\n    if (!userAddress) {\n      console.error(\"‚ùå No user address provided\");\n      return { points: [], series: [] };\n    }\n  \n    const API_URL = `https://radiant-fjord-87733-0278092327b3.herokuapp.com/api/smartalpha/users/${userAddress}/portfolio-value`;\n  \n    try {\n      console.log(\"üì° Fetching User Portfolio Value from:\", API_URL);\n  \n      const response = await fetch(API_URL);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const responseData = await response.json();\n      console.log(\"‚úÖ Raw API user portfolio Response:\", responseData);\n  \n      // Ensure responseData has required fields\n      if (!responseData || typeof responseData !== \"object\") {\n        console.error(\"‚ùå Unexpected API response format\", responseData);\n        return { points: [], series: [] };\n      }\n  \n      // Extract time point and portfolio values\n   const points = responseData.data.map((entry) => entry.point);\n      const series = [\n        {\n          name: \"Junior Value\",\n          data: responseData.data.map((entry) => parseFloat(entry.juniorValue) || 0),\n        },\n        {\n          name: \"Senior Value\",\n          data: responseData.data.map((entry) => parseFloat(entry.seniorValue) || 0),\n        },\n        {\n          name: \"Entry Queue Value\",\n          data: responseData.data.map((entry) => parseFloat(entry.entryQueueValue) || 0),\n        },\n        {\n          name: \"Exit Queue Value\",\n          data: responseData.data.map((entry) => parseFloat(entry.exitQueueValue) || 0),\n        },\n      ];\n  \n      const parsedData = { points, series };\n      console.log(\"‚úÖ Parsed API Data:\", parsedData);\n      return parsedData;\n    } catch (error) {\n      console.error(\"‚ùå API Fetch Error:\", error);\n      return { points: [], series: [] };\n    }\n  };","import { useTheme } from \"@mui/material/styles\";\nimport PropTypes from \"prop-types\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { fetchPoolPerformanceData ,fetchUserPortfolioValue} from \"../../contexts/api/index\"; // Import API function\n\nconst areaChartOptions = {\n  chart: {\n    height: 450,\n    type: \"area\",\n    toolbar: { show: false },\n  },\n  dataLabels: { enabled: false },\n  stroke: { curve: \"smooth\", width: 2 },\n  grid: { strokeDashArray: 0 },\n};\n\nexport default function IncomeAreaChart({selectedPool, userAddress}) {\n  const theme = useTheme();\n  const { primary, secondary } = theme.palette.text;\n  const line = theme.palette.divider;\n\n  const [options, setOptions] = useState(areaChartOptions);\n  const [series, setSeries] = useState([]);\n  const [points, setPoints] = useState([]); // Store timestamp data\n\n  useEffect(() => {\n    \n    const loadChartData = async () => {\n      try {\n        if (selectedPool && !userAddress) {\n          // Fetch Pool Performance Data when no pool is selected\n          const { points, series } = await fetchPoolPerformanceData(selectedPool);\n          \n          console.log(\"‚úÖ Data received in IncomeAreaChart in pool performance:\", { points, series });\n\n          if (!points || !Array.isArray(points) || points.length === 0) {\n            console.warn(\"‚ö†Ô∏è Points array is empty or invalid:\", points);\n          }\n          if (!series || !Array.isArray(series) || series.length === 0) {\n            console.warn(\"‚ö†Ô∏è Series array is empty or invalid:\", series);\n          }\n\n          setPoints(points);\n          setSeries(series);\n        }else if (selectedPool == null && userAddress !== \"\"){\n          // Fetch Pool Performance Data when no pool is selected\n          const { points, series } = await fetchUserPortfolioValue(userAddress);\n          \n          console.log(\"‚úÖ Data received in IncomeAreaChart in user portfolio:\", { points, series });\n\n          if (!points || !Array.isArray(points) || points.length === 0) {\n            console.warn(\"‚ö†Ô∏è Points array is empty or invalid:\", points);\n          }\n          if (!series || !Array.isArray(series) || series.length === 0) {\n            console.warn(\"‚ö†Ô∏è Series array is empty or invalid:\", series);\n          }\n          \n          setPoints(points);\n          setSeries(series);\n        }\n      } catch (error) {\n        console.error(\"‚ùå Error in loadChartData:\", error);\n      }\n    };\n\n    loadChartData();\n  },[selectedPool, userAddress]);\n  \n\n  useEffect(() => {\n    setOptions((prevState) => ({\n      ...prevState,\n      colors: [\n        theme.palette.primary.main,\n        theme.palette.success.main,\n        theme.palette.warning.main,\n        theme.palette.error.main,\n        theme.palette.info.main,\n      ],\n      xaxis: {\n        categories: points.length > 0 ? points.map((p) => new Date(p).toLocaleString(undefined, { month: 'short', day: '2-digit' ,year:'numeric'})) : [],\n        labels: { style: { colors: new Array(30).fill(secondary) } },\n        axisBorder: { show: true, color: line },\n        tickAmount: points.length > 0 ? points.length - 1 : 30,\n      },\n      yaxis: {\n        min: Math.min(...series.flatMap((s) => s.data)) * 0.9, // 10% padding\n        max: Math.max(...series.flatMap((s) => s.data)) * 1.1, // 10% padding\n        labels: {\n          formatter: (value) => value.toFixed(0), // Ensures readable numbers\n        }\n      },\n      grid: { borderColor: line },\n    }));\n  }, [primary, secondary, line, theme, points, series]);\n\n  return <ReactApexChart options={options} series={series} type=\"area\" height={450} />;\n}\n\nIncomeAreaChart.propTypes = { slot: PropTypes.string };","\n\n// material-ui\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\n// project import\nimport MainCard from '../../components/MainCard';\nimport IncomeAreaChart from './IncomeAreaChart';\n\n// ==============================|| DEFAULT - UNIQUE VISITOR ||============================== //\n\nexport default function UniqueVisitorCard({ selectedPool ,userAddress}) {\n  return (\n    <>\n      <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n      </Grid>\n      <MainCard content={false} sx={{ mt: 1.5 ,width: \"100%\"}}>\n        <Box sx={{ pt: 1, pr: 2 }}>\n          <IncomeAreaChart selectedPool = {selectedPool} userAddress = {userAddress}/>\n        </Box>\n      </MainCard>\n    </>\n  );\n}\n","import Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport UniqueVisitorCard from \"./PoolPerformance\";\nimport { useState } from \"react\";\n\nconst POOLS = {\n  \"1\": {\n    name: \"WETH-USD-1w\",\n    address: \"0x31f7da25361ad99ca4daa4e8709624660f324f48\",\n    start: 1631541600,\n    end: 1688998703,\n  },\n  \"2\": {\n    name: \"WBTC-USD-1w\",\n    address: \"0x13d5387389ac1a3b72391d88b03b893a945b17cd\",\n    start: 1631541600,\n    end: 1717353143,\n  },\n  \"3\": {\n    name: \"WBTC-ETH-1w\",\n    address: \"0xb0105f829d50841b949c274636c2d173a78db7e0\",\n    start: 1631541600,\n    end: 1669025951,\n  },\n};\n\nexport default function DashboardDefault() {\n  // Separate states for each chart\n  const [selectedPoolPerformance, setSelectedPoolPerformance] = useState(\"1\");\n  const [userAddress, setUserAddress] = useState(\"\"); // Store user address\n\n  const handleAddressSave = () => {\n    console.log(\"‚úÖ Saved User Address:\", userAddress);\n    setUserAddress(userAddress); // Update only after clicking Save\n  };\n\n  return (\n    <Grid container rowSpacing={4.5} columnSpacing={2.75}>\n      {/* ========= Pool Performance ========= */}\n      <Grid item xs={12} sx={{ mb: -2.25 }}>\n        <ButtonGroup color=\"primary\" aria-label=\"Pools\">\n          {Object.entries(POOLS).map(([id, pool]) => (\n            <Button\n              key={id}\n              onClick={() => setSelectedPoolPerformance(id)}\n              variant={selectedPoolPerformance === id ? \"contained\" : \"outlined\"}\n            >\n              {pool.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n\n      <Grid item>\n        <Typography variant=\"h5\">Pool Performance</Typography>\n      </Grid>\n\n      <Grid item xs={12} md={7} lg={12}>\n        <UniqueVisitorCard selectedPool={selectedPoolPerformance} userAddress = {\"\"}/>\n      </Grid>\n\n      {/* ========= User Portfolio Value ========= */}\n      <Grid item>\n        <Typography variant=\"h5\">User Portfolio Value</Typography>\n      </Grid>\n\n      {/* ========= TextField + Save Button ========= */}\n      <Grid item xs={12} md={7} lg={12} sx={{ display: \"flex\", gap: 2, alignItems: \"center\" }}>\n        <TextField\n          label=\"Enter User Address\"\n          variant=\"outlined\"\n          fullWidth\n          value={userAddress}\n          onChange={(e) => setUserAddress(e.target.value)}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddressSave}>\n          Plot\n        </Button>\n      </Grid>\n\n      <Grid item xs={12} md={7} lg={12}>\n        <UniqueVisitorCard selectedPool={null} userAddress ={userAddress} />\n      </Grid>\n    </Grid>\n  );\n}\n"],"names":["fetchPoolPerformanceData","async","_POOLS$selectedPool","_POOLS$selectedPool2","_POOLS$selectedPool3","selectedPool","console","error","points","series","POOLS","name","address","start","end","selectedAddress","startPool","endPool","API_URL","response","fetch","ok","Error","status","responseData","json","data","Array","isArray","map","entry","point","parseFloat","juniorWithoutSA","juniorWithSA","seniorWithoutSA","seniorWithSA","underlyingPrice","fetchUserPortfolioValue","userAddress","log","parsedData","juniorValue","seniorValue","entryQueueValue","exitQueueValue","areaChartOptions","chart","height","type","toolbar","show","dataLabels","enabled","stroke","curve","width","grid","strokeDashArray","IncomeAreaChart","_ref","theme","useTheme","primary","secondary","palette","text","line","divider","options","setOptions","useState","setSeries","setPoints","useEffect","length","warn","loadChartData","prevState","colors","main","success","warning","info","xaxis","categories","p","Date","toLocaleString","undefined","month","day","year","labels","style","fill","axisBorder","color","tickAmount","yaxis","min","Math","flatMap","s","max","formatter","value","toFixed","borderColor","_jsx","ReactApexChart","UniqueVisitorCard","_jsxs","_Fragment","children","Grid","container","alignItems","justifyContent","MainCard","content","sx","mt","Box","pt","pr","DashboardDefault","selectedPoolPerformance","setSelectedPoolPerformance","setUserAddress","rowSpacing","columnSpacing","item","xs","mb","ButtonGroup","Object","entries","id","pool","Button","onClick","variant","Typography","md","lg","display","gap","TextField","label","fullWidth","onChange","e","target","handleAddressSave"],"sourceRoot":""}